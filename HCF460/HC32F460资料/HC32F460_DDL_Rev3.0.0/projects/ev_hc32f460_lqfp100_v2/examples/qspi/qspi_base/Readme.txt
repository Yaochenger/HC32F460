================================================================================
                                样例使用说明
================================================================================
版本历史
Date        Version     Author      IAR     MDK     GCC     Description
2022-03-31  1.0         CDT         7.70    5.16    8.3.1   First version

================================================================================
平台说明
================================================================================
GCC工程，由Eclipse IDE外挂GNU-ARM Toolchain，再结合pyOCD GDB Server实现工程的编译、
链接和调试。在用Eclipse导入工程后，请将xxxx_PyOCDDebug中pyocd-gdbserver和SVD文件
设置为正确的路径；请将xxxx_PyOCDDownload中pyocd设置为正确的路径。注意，这些路径不
能包含非英文字符。

================================================================================
功能描述
================================================================================
本样例展示QSPI读写板载Flash功能。

说明：
本样例设置默认设置QSPI为四线式输出快速读模式，每按一次K2则触发一次擦除flash、写
入数据到flash、从flash读取数据，再将读写的数据进行比较，相同的LED_BLUE亮，不同
则LED_RED亮，每次按键都将flash地址偏移到下一个扇区。

可以同时修改QSPI_FLASH_RD_MD和QSPI_FLASH_RD_DUMMY_CYCLE宏定义值，尝试不同的QSPI
读取模式来进行读写对比。

================================================================================
测试环境
================================================================================
测试用板:
---------------------
EV_F460_LQ100_Rev2.0

辅助工具:
---------------------
Micro USB数据线

辅助软件:
---------------------
串口调试助手

================================================================================
使用步骤
================================================================================
1）使用USB线连接电脑及目标板的J8 USBDAP端口；
2）在串口调试助手上打开USB对应串口，配置端口如下参数：
     波特率：115200
     数据位：8
     校验位：None
     停止位：1
3）打开工程并重新编译，启动IDE的下载和调试功能；
4）观察串口打印Flash的UID值；
5）按下按键K2，触发擦除、读写对比功能，读写内容相同则LED_BLUE亮，不同则LED_RED
亮，可重复按下按键K2多次测试读写功能。

================================================================================
注意
================================================================================
程序默认未开启XIP功能，如需开启请将hc32f4xx_conf.h文件中的QSPI_XIP_FUNC_ENABLE修
改为DDL_ON；本样例XIP功能仅适用于QSPI_RD_MD_QUAD_IO_FAST_RD模式。

================================================================================
